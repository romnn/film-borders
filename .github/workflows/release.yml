name: release

on:
  push:
    tags:
      - "*"

jobs:
  publish-release-binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: query
        uses: romnnn/query-git-action@master

      - name: Compile binaries
        run: |
          cargo build --release --all-targets

      - name: Upload release binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/film-borders
          tag: ${{ steps.query.outputs.stable_semver_version }}
          release_name: ${{ steps.query.outputs.stable_semver_version }}
          overwrite: true
          file_glob: true

  publish-cli-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - id: query
        uses: romnnn/query-git-action@master

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.cli
          platforms: linux/amd64
          push: true
          build-args: |
            version=${{ steps.query.outputs.stable_semver_version }}
          tags: |
            romnn/film-borders-cli:latest
            romnn/film-borders-cli:${{ steps.query.outputs.stable_docker_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  publish-public-webapp-docker-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - id: query
        uses: romnnn/query-git-action@master

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            version=${{ steps.query.outputs.stable_semver_version }}
          tags: |
            romnn/wasm-film-borders-webapp:latest
            romnn/wasm-film-borders-webapp:${{ steps.query.outputs.stable_docker_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  publish-private-webapp-docker-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - id: query
        uses: romnnn/query-git-action@master

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to registry.romnn.com
        uses: docker/login-action@v1
        with:
          registry: core.registry.romnn.com
          username: ${{ secrets.CONTAINER_REG_USERNAME }}
          password: ${{ secrets.CONTAINER_REG_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          # publicURL=https://app.romnn.com/film-borders
          build-args: |
            version=${{ steps.query.outputs.stable_semver_version }}
          tags: |
            core.registry.romnn.com/romnn/wasm-film-borders-webapp:latest
            core.registry.romnn.com/romnn/wasm-film-borders-webapp:${{ steps.query.outputs.stable_docker_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

