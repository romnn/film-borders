name: release

on:
  push:
    tags:
      - "*"

jobs:
  publish-crate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: query
        uses: romnn/query-git-action@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  publish-webapp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: query
        uses: romnn/query-git-action@master

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions/setup-python@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Pack wasm
        run: |
          pip install pipenv
          pipenv install --dev
          npm install --global yarn
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          pipenv run invoke pack

      - name: Build page
        env:
          REACT_APP_VERSION: ${{ steps.query.outputs.stable_semver_version }}
        run: |
          cd www
          yarn install
          yarn build
          touch build/.nojekyll

      - name: Deploy to pages
        uses: JamesIves/github-pages-deploy-action@latest
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: www/build
          CLEAN: true

  publish-release-binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: query
        uses: romnn/query-git-action@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Compile binaries
        run: >-
          cargo build
          --features "builtin"
          --profile lib
          --all-targets

      - name: Upload release binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/film-borders
          tag: ${{ steps.query.outputs.stable_semver_version }}
          release_name: ${{ steps.query.outputs.stable_semver_version }}
          overwrite: true
          file_glob: true

  publish-cli-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - id: query
        uses: romnn/query-git-action@master

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.cli
          platforms: linux/amd64
          push: true
          build-args: |
            version=${{ steps.query.outputs.stable_semver_version }}
          tags: |
            romnn/film-borders-cli:latest
            romnn/film-borders-cli:${{ steps.query.outputs.stable_docker_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  publish-public-webapp-docker-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - id: query
        uses: romnn/query-git-action@master

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            version=${{ steps.query.outputs.stable_semver_version }}
          tags: |
            romnn/wasm-film-borders-webapp:latest
            romnn/wasm-film-borders-webapp:${{ steps.query.outputs.stable_docker_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
