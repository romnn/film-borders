/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_boundedsize_free(a: number): void;
export function __wbg_get_boundedsize_width(a: number, b: number): void;
export function __wbg_set_boundedsize_width(a: number, b: number, c: number): void;
export function __wbg_get_boundedsize_height(a: number, b: number): void;
export function __wbg_set_boundedsize_height(a: number, b: number, c: number): void;
export function boundedsize_new(): number;
export function __wbg_border_free(a: number): void;
export function border_new(a: number, b: number): number;
export function border_from_image_data(a: number): number;
export function border_builtin(a: number): number;
export function __wbg_image_free(a: number): void;
export function image_from_canvas(a: number, b: number, c: number): void;
export function image_from_image_data(a: number, b: number): void;
export function __wbg_imageborders_free(a: number): void;
export function imageborders_from_canvas(a: number, b: number, c: number): void;
export function imageborders_from_image_data(a: number, b: number): void;
export function imageborders_to_image_data(a: number, b: number, c: number): void;
export function imageborders_render(a: number, b: number, c: number, d: number): void;
export function __wbg_color_free(a: number): void;
export function color_hex(a: number, b: number, c: number): void;
export function color_rgb(a: number, b: number, c: number): number;
export function color_rgba(a: number, b: number, c: number, d: number): number;
export function color_clear(): number;
export function color_black(): number;
export function color_white(): number;
export function color_gray(): number;
export function __wbg_point_free(a: number): void;
export function __wbg_get_point_x(a: number, b: number): void;
export function __wbg_set_point_x(a: number, b: number, c: number): void;
export function __wbg_get_point_y(a: number, b: number): void;
export function __wbg_set_point_y(a: number, b: number, c: number): void;
export function point_new(): number;
export function point_origin(): number;
export function __wbg_options_free(a: number): void;
export function __wbg_get_options_output_size(a: number): number;
export function __wbg_set_options_output_size(a: number, b: number): void;
export function __wbg_get_options_output_size_bounds(a: number): number;
export function __wbg_set_options_output_size_bounds(a: number, b: number): void;
export function __wbg_get_options_scale_factor(a: number): number;
export function __wbg_set_options_scale_factor(a: number, b: number): void;
export function __wbg_get_options_margin(a: number): number;
export function __wbg_set_options_margin(a: number, b: number): void;
export function __wbg_get_options_mode(a: number): number;
export function __wbg_set_options_mode(a: number, b: number): void;
export function __wbg_get_options_crop(a: number): number;
export function __wbg_set_options_crop(a: number, b: number): void;
export function __wbg_get_options_frame_width(a: number): number;
export function __wbg_set_options_frame_width(a: number, b: number): void;
export function __wbg_get_options_image_rotation(a: number): number;
export function __wbg_set_options_image_rotation(a: number, b: number): void;
export function __wbg_get_options_border_rotation(a: number): number;
export function __wbg_set_options_border_rotation(a: number, b: number): void;
export function __wbg_get_options_frame_color(a: number): number;
export function __wbg_set_options_frame_color(a: number, b: number): void;
export function __wbg_get_options_background_color(a: number): number;
export function __wbg_set_options_background_color(a: number, b: number): void;
export function __wbg_get_options_preview(a: number): number;
export function __wbg_set_options_preview(a: number, b: number): void;
export function options_new(): number;
export function options_deserialize(a: number, b: number, c: number): void;
export function options_serialize(a: number, b: number): void;
export function __wbg_rect_free(a: number): void;
export function __wbg_get_rect_top(a: number, b: number): void;
export function __wbg_set_rect_top(a: number, b: number, c: number): void;
export function __wbg_get_rect_left(a: number, b: number): void;
export function __wbg_set_rect_left(a: number, b: number, c: number): void;
export function __wbg_get_rect_bottom(a: number, b: number): void;
export function __wbg_set_rect_bottom(a: number, b: number, c: number): void;
export function __wbg_get_rect_right(a: number, b: number): void;
export function __wbg_set_rect_right(a: number, b: number, c: number): void;
export function __wbg_size_free(a: number): void;
export function __wbg_get_size_width(a: number): number;
export function __wbg_set_size_width(a: number, b: number): void;
export function __wbg_get_size_height(a: number): number;
export function __wbg_set_size_height(a: number, b: number): void;
export function size_new(): number;
export function __wbg_sides_free(a: number): void;
export function __wbg_get_sides_top(a: number): number;
export function __wbg_set_sides_top(a: number, b: number): void;
export function __wbg_get_sides_left(a: number): number;
export function __wbg_set_sides_left(a: number, b: number): void;
export function __wbg_get_sides_bottom(a: number): number;
export function __wbg_set_sides_bottom(a: number, b: number): void;
export function __wbg_get_sides_right(a: number): number;
export function __wbg_set_sides_right(a: number, b: number): void;
export function sides_new(): number;
export function sides_uniform(a: number): number;
export function __wbg_resultsize_free(a: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
